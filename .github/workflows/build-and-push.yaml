name: Build binaries and docker containers and publish them

on:
  tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  build-and-release-binaries:
    name: Build binaries for Linux and OSX
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout github-actions-validator source code
        uses: actions/checkout@v3

      - name: Install golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binaries
        run:
          GOOS=linux GOARCH=amd64 go build -o target/github-actions-validator-${GITHUB_REF_NAME}-linux-amd64
          GOOS=darwin GOARCH=arm64 go build -o target/github-actions-validator-${GITHUB_REF_NAME}-darwin-arm64

      - name: Create release
        uses: softprops/actions-gh-release@v1

      - name: Upload binaries to release
        uses: softprops/actions-gh-release@v1
        with:
          files: |
            target/github-actions-validator-${GITHUB_REF_NAME}-linux-amd64
            target/github-actions-validator-${GITHUB_REF_NAME}-darwin-arm64

  build-push-docker:
    name: Build and push Github Actions Validator to ECR
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v3

      - name: Build docker image
        run: |
          docker build --tag github-actions-validator .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws/p6e8q1z1
          username: ${{ secrets.AWS_MAINNET_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_MAINNET_SECRET_ACCESS_KEY }}

      - name: Push image to ECR
        env:
          LOCAL_IMAGE: github-actions-validator
          ECR_PUSH_IMAGE: public.ecr.aws/p6e8q1z1/github-actions-validator
        run: |
          docker tag ${{ env.LOCAL_IMAGE }} ${{ env.ECR_PUSH_IMAGE }}:${GITHUB_REF_NAME}
          docker push ${{ env.ECR_PUSH_IMAGE }}:${GITHUB_REF_NAME}
